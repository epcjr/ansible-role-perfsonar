---
# tasks file for ansible-role-perfsonar/

- name: check to see if requested bundle is supported "{{ perfsonar_bundle }}"
  fail:
    msg: "Unsupported perfsonar_bundle requested"
  tags: [ 'always' ]
  when: perfsonar_bundle != "perfsonar-toolkit" and
        perfsonar_bundle != "perfsonar-testpoint"

- name: Load variables based on OS type
  include_vars: "{{ item }}"
  tags: [ 'always' ]
  with_items:
    - "{{ ansible_os_family }}.yml"

# ps::install directives

- name: RedHat Install
  include_tasks: install-RedHat.yml
  tags: [ 'ps::install' ]
  when: ansible_os_family == "RedHat"

- name: install bundle
  package:
    name: "{{ perfsonar_bundle }}"
    state: latest
  tags: [ 'ps::install' ]

- name: bundle specific install directives
  include_tasks: "{{ item }}"
  tags: [ 'ps::install' ]
  with_items:
    - "{{ perfsonar_bundle }}.yml"

# ps::config directives

- name: Disable ssh root access
  lineinfile:
    state: present
    path: /etc/ssh/sshd_config
    regexp: "^PermitRootLogin "
    line: "PermitRootLogin no"
  tags: [ 'ps::config' ]
  when: perfsonar_disable_root_ssh
  notify:
    - restart ssh

- name: add ntpservers
  lineinfile:
    path: /etc/ntp.conf
    line: "server {{ item }}"
  with_items: "{{ perfsonar_ntpservers }}"
  tags: [ 'ps::config' ]
  when: perfsonar_ntpservers is defined and perfsonar_ntpservers != none
  notify:
    - restart ntp

- name: perfsonar_interface config
  command: /usr/lib/perfsonar/scripts/mod_interface_route --command add --device "{{ item['interface_name'] }}" --ipv4_gateway "{{ item['interface_gateway_ipv4'] }}"
  with_items: "{{ perfsonar_interfaces }}"
  tags: [ 'ps::config' ]
  when: perfsonar_interfaces is defined and perfsonar_interfaces != none

# ps::running directives

- name: troubleshoot pscheduler
  command: pscheduler troubleshoot "{{ item }}"
  with_items: "{{ perfsonar_troubleshoot }}"
  tags: [ 'ps::running' ]
  when: perfsonar_troubleshoot is defined and perfsonar_troubleshoot != none
